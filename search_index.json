[
["index.html", "slapnap: Super LeArner Prediction of NAb Panels Welcome", " slapnap: Super LeArner Prediction of NAb Panels David Benkeser, Brian D. Williamson, Craig A. Magaret, Bhavesh R. Borate, Peter B. Gilbert May 27, 2020 Welcome The slapnap container is a tool for using the Compile, Analyze and Tally NAb Panels (CATNAP) database to develop predictive models of HIV-1 neutralization sensitivity to one or several broadly neutralizing antibodies (bNAbs). Crystal structure of HIV-1 gp120 glycoprotein. Highlighted residues indicating sites most-predictive of VRC01 neutralization resistance. (Magaret et al. 2019) In its simplest form, slapnap can be used simply to access and format data from CATNAP in a way that is usable for machine learning analysis. However, the tool also offers fully automated and customizable machine learning analyses based on up to five different neutralization endpoints, complete with automated report generation to summarize results and identify the most predictive features. This document serves as the user manual for the slapnap container. Here, we describe everything needed to utilize the slapnap container and understand its output. The documentation is organized into the following sections: Section 1 provides a brief overview of Docker, including information on installing Docker and downloading the slapnap container. Section 2 provides a brief overview of the CATNAP database and the specifics of how the data were accessed to build the slapnap container. Section 3 provides a detailed description of how to make calls to the slapnap repository, including descriptions of all options that are available. Section 4 includes several example calls to the slapnap container and descriptions of their output. Section 6 provides a description of the data set created in the slapnap container. Section 7 provides an overview of the methodology that is used in within the slapnap analysis. If you have any issues or questions about using slapnap, please file an issue on GitHub. "],
["1-sec-docker.html", "1 Docker", " 1 Docker Docker is a free platform for building containers. Containers are standard units of software that package code and all its dependencies, so that the code can be executed reliably irrespective of computing environment. The slapnap tool relies on machine learning implemented in the R language and relies on several packages. Achieving full reproducibility for such analyses is challenging in that it requires synchronization across the specific version of R and dependent packages. In other words, two users running two versions of R or two versions of the same R package may arrive at different output when running the same code. Containerization ensures that this does not happen. Any two runs of slapnap with the same input options will yield the same output every time. Installing Docker is necessary for running the slapnap tool. While it is not necessary for execution of the slapnap container, readers interested in learning more about Docker should consult the Docker documentation for information about getting started using Docker. Once Docker has been installed on your local computer, you can download slapnap using the following command. docker pull slapnap/slapnap This command pulls the image from DockerHub. Once the image has been downloaded, we are ready to learn about how to execute slapnap jobs. The next section contains information on the source data used by slapnap. Users familiar with the CATNAP data may wish to skip directly to Section 3.1. "],
["2-sec-catnap.html", "2 CATNAP Database", " 2 CATNAP Database The CATNAP database is a web server hosted by Los Alamos National Laboratory (Yoon et al. 2015). The database integrates antibody neutralization and HIV-1 sequence data from published studies. Neutralization is measured in terms of half maximal inhibitory concentration (IC\\(_{50}\\)) and 80% inhibitory concentration (IC\\(_{80}\\)). These measures of neutralization against HIV envelope pseudoviruses are available for many broadly neutralizing antibodies (bNAbs) and for some combination bNAbs. Also available on each pseudovirus are amino acid (AA) sequence features for the gp160 protein. These are detailed in Section 6. During each build of the slapnap container, all raw data are downloaded from CATNAP. At run time, the relevant data are selected and processed into a format that is amenable for predictive machine learning analyses. The CATNAP data are updated periodically. To check the date the raw data were pulled from CATNAP to slapnap, you can check the date of the latest build here. "],
["3-sec-runningcontainer.html", "3 Running the slapnap container 3.1 slapnap options 3.2 Mounting a local directory 3.3 Viewing report in web browser 3.4 Interactive sessions", " 3 Running the slapnap container To run the slapnap container, we make use of the docker run command. Note that administrator (sudo) privileges are needed to execute this command. There are several options that are necessary to include in this command to control the behavior of slapnap. These are discussed in separate subsections below. 3.1 slapnap options The user has control over many aspects of slapnap’s behavior. These options are passed in using the -e option1. Semi-colon separated strings are used to set options. For example, to provide input for the option option_name, we would used -e option_name=&quot;a;semi-colon;separated;string&quot;. Note that there are no spaces between the option name and its value and no spaces after semi-colons in the separated list. See Section 4 for full syntax. Each description below lists the default value that is assumed if the option is not specified. Note that many of the default values are chosen simply so that na{&quot;i}ve calls to slapnap compile quickly. Proper values should be determined based on scientific context. -e options for slapnap nab: A semicolon-separated list of bNAbs (default = “VRC01”). A list of possible bNAbs can be found here. If multiple bNAbs are listed, it is assumed that the analysis should be of estimated outcomes for a combination of bNAbs (see Section 7.1 for details on how estimated outcomes for multiple bNAbs are computed). outcomes: A semicolon-separated string of outcomes to include in the analysis. Possible values are &quot;ic50&quot; (included in default), &quot;ic80&quot;, &quot;iip&quot;, &quot;sens&quot; (included in default), &quot;estsens&quot;, &quot;multsens&quot;. If only a single nab is specified, use sens to include a dichotomous endpoint. If multiple nabs are specified, use estsens and/or multsens. For detailed definitions of outcomes see Section 7.1). sens_thresh A numeric value defining the IC\\(_{50}\\) threshold for defining a sensitive versus resistant pseudovirus (default = 1). The dichotomous sensitivity/resistant outcomes are defined as the indicator that (estimated) IC\\(_{50}\\) is greater than or equal to sens_thresh. multsens_nab A numeric value used for defining whether a pseudovirus is resistant to a multi-nAb cocktail. The dichotomous outcome multsens is defined as the indicator that a virus has (estimated) \\(IC_{50}\\) greater than sens_thresh for at least multsens_nab nAbs. learners: A semicolon-separated string of machine learning algorithms to include in the analysis. Possible values include &quot;rf&quot; (random forest, default), &quot;xgboost&quot; (eXtreme gradient boosting), and &quot;lasso&quot; (elastic net). If more than one algorithm is included, then it is assumed that a cross-validated-based ensemble (i.e., a super learner) is desired (see Section 7.2). cvtune: A boolean string (i.e., either &quot;TRUE&quot; or &quot;FALSE&quot; [default]) indicating whether the learners should be tuned using cross-validation and a small grid search. Defaults to &quot;FALSE&quot;. If multiple learners are specified, then the super learner ensemble includes three versions of each of the requested learners with different tuning parameters. cvperf: A boolean string (i.e., either &quot;TRUE&quot; or &quot;FALSE&quot; [default]) indicating whether the learners performance should be evaluated using cross-validation. If cvtune=&quot;TRUE&quot; or learners includes multiple algorithms, then nested cross-validation is used to evaluate the performance of the cross-validation-selected best value of tuning parameters for the specified algorithm or the super learner, respectively. nfolds: A numeric string indicating the number of folds to use in cross-validation procedures (default = &quot;2&quot;). importance_grp: A semicolon-separated string indicating which group-level variable importance measures should be computed. Possible values are none &quot;&quot; (default), marginal &quot;marg&quot;, conditional &quot;cond&quot;. See Section 7.3.1 for details on these measures. importance_ind: A semicolon-separated string indicating which individual-level variable importance measures should be computed. Possible values are none &quot;&quot; (default), learner-level &quot;pred&quot;, marginal &quot;marg&quot; and conditional &quot;cond&quot;. The latter two take significant computation time to compute. report_name: A string indicating the desired name of the output report (default = report_[_-separated list of nabs]_[date].html). return: A semicolon-separated string of the desired output. Possible values are &quot;report&quot; (default), &quot;learner&quot; for the trained algorithm, &quot;data&quot; for the analysis dataset, &quot;figures&quot; for all figures from the report, and &quot;vimp&quot; for variable importance objects. view_port: A boolean string indicating whether the compiled report should be made viewable on localhost (default &quot;FALSE&quot;). If &quot;TRUE&quot; then -p option should be used in the docker run command to identify the port. See examples for details. 3.2 Mounting a local directory At the end of a slapnap run, user-specified output will be saved (see option return in Section 3.1). To retrieve these files from inside the container, we can mount a local directory to an output directory (/home/output/) in the container using the -v option. That is, all files in the mounted local directory will be visible to programs running inside the container and any items saved to the output directory in the container (file path in the container /home/output/) will be available in the mounted directory. Suppose /path/to/local/dir is the file path on a local computer in which we wish to save the output files from a slapnap run. A docker run of slapnap would include the option -v /path/to/local/dir:/home/output. After a run completes, the requested output should be viewable in /path/to/local/dir. See Section 4 for full syntax. 3.3 Viewing report in web browser An alternative option to mounting local directories for viewing and downloading the report is to set the view_port option to &quot;TRUE&quot; and open a port to the container via the -p option in the docker run statement. In this case, rather than exiting upon completion of the analysis, the container will continuing to run and broadcast the compiled report to localhost at the specified port (see examples below). The report can be downloaded from the web browser directly in this way. 3.4 Interactive sessions To simply enter the container and poke around, use an interactive session by including -it and overriding the container’s entry-point. docker run -it slapnap/slapnap /bin/bash This will enter you into the container in a bash terminal. This may be useful for exploring the file structure, examining versions of R packages that are included in the container, etc. This sets an environment variable in the container environment. These variables are accessed by the various R and bash scripts in the container to dictate how the container executes code.↩ "],
["4-sec-examples.html", "4 Examples 4.1 Basic call to slapnap 4.2 Viewing results in a web browser 4.3 Super learning 4.4 Train an algorithm 4.5 Pull and clean data", " 4 Examples 4.1 Basic call to slapnap A call to slapnap with all default options can be run using the following command. docker run -v /path/to/local/dir:/home/output slapnap/slapnap Note that this call mounts the local directory path/to/local/dir to receive output from the container (Section 3.2). When this command is executed, messages will print to indicate the progress of the container. The first message will report the name of the log file, which will appear in /path/to/local/dir. The container will then compile an analytic data set from the CATNAP database for the default antibody (VRC01), train the default learner (random forest) for the default outcomes (ic50 and sens), evaluate its performance using two-fold (default for nfolds) cross-validation, and compile a report detailing the results, and place the compiled report in path/to/local/dir. 4.2 Viewing results in a web browser To have the results viewable in a web browser execute the following command. docker run -v /path/to/local/dir:/home/output \\ -e view_port=&quot;TRUE&quot; -p 80:80 \\ slapnap/slapnap This command opens port 80 on the container. Once the report has been compiled, the container will not close down automatically. Instead it will continue to run, broadcasting the report to port 80. Open a web browser on your computer and navigate to localhost:80 and you should see the compiled report. Many web browsers should allow downloading of the report (e.g., by right-clicking and selecting save Save As...). The container will continue to run until you tell it to stop. To do that, retrieve the container ID by executing docker container ps. Copy the ID of the running container (say MY_CONTAINER_ID) and then execute docker stop MY_CONTAINER_ID to shut down the container. Note that in the above command, we have still mounted a local directory, which may be considered best practice in case other output besides the report is desired to be returned. 4.3 Super learning 4.4 Train an algorithm 4.5 Pull and clean data "],
["5-sec-report.html", "5 Report details", " 5 Report details "],
["6-sec-data.html", "6 Data details", " 6 Data details "],
["7-sec-methods.html", "7 Method details 7.1 Outcome definitions 7.2 Super learner details 7.3 Variable importance details", " 7 Method details 7.1 Outcome definitions 7.2 Super learner details 7.3 Variable importance details 7.3.1 Biological importance 7.3.2 Predictive importance "],
["8-sec-refs.html", "8 References", " 8 References "]
]
